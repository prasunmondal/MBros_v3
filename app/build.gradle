plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

// https://stackoverflow.com/questions/28498688/gradle-script-to-autoversion-and-include-the-commit-hash-in-android
def getLastGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getLastGitCommitDate = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'log', '-1', '--date=format:%Y/%m/%d %T', '--format=%ad'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getDateWithoutTime() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'log', '-1', '--date=format:%Y.%m.%d', '--format=%ad'
        standardOutput = stdout
    }
    return stdout.toString().trim() //+ getLastGitHash()
}

android {
    namespace 'com.tech4bytes.mbrosv3'
    compileSdk 34

    defaultConfig {
        applicationId "com.tech4bytes.mbrosv3"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "${getLastGitCommitDate()} (${getLastGitHash()})"
//        buildConfigField "String", "lastGitCommitHash", "\"${getLastGitHash()}\""
//        buildConfigField "String", "lastGitCommitDate", "\"${getLastGitCommitDate()}\""
//        setProperty("archivesBaseName", "MBros-${getLastGitHash()}-${getDateWithoutTime()}")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", "lastGitCommitHash", "\"${getLastGitHash()}\""
            buildConfigField "String", "lastGitCommitDate", "\"${getLastGitCommitDate()}\""
            setProperty("archivesBaseName", "MBros-${getLastGitHash()}-${getDateWithoutTime()}")
            buildConfigField "String", "URL_SEARCH", "\"https://dev-search.example.com\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        buildConfig true
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    implementation 'com.github.prasunmondal:lib.postToGSheet:1.0.1'
    implementation 'com.github.prasunmondal:dev-libs:1.1.26'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.9.22'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.apache.commons:commons-text:1.1'
}